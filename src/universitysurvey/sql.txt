
--Creating tables

--Department table
create table Departments (
	depName varchar(25) not null,
	constraint depName_pk primary key (depName)
);

--Course table
create table Courses (
	courseNum int not null,
	depName varchar(25) not null,
	courseName varchar(25) not null,
	courseUnits int not null,
	constraint depName_fk foreign key (depName) references Departments (depName),
	constraint course_pk primary key (courseNum, depName)
);

--Section table
--Figure out how to put in the day
--time is varchar because of am and pm
create table Sections (
	depName varchar(25) not null,
	courseNum int not null,
	secNum int not null,
	startTime varchar(20) not null,
	endTime varchar(20) not null,
	meetingDays varchar(20) not null,
	constraint sectionCourse_fk foreign key (courseNum, depName) references Courses (courseNum, depName),
	constraint section_pk primary key (depName, courseNum, secNum)
);

--Student table
create table Students (
	studentID int not null,
	firstName varchar(25) not null,
	lastName varchar(25) not null,
	email varchar(50) not null,
	constraint student_pk primary key (studentID)
);

--Team table
create table Team(
	teamName varchar(25) not null,
	secNum int not null,
	depName varchar(25) not null,
	courseNum int not null,
	constraint team_fk foreign key (depName, courseNum, secNum) references Sections (depName, courseNum, secNum),
	constraint team_pk primary key (teamName, secNum, depName, courseNum)
);

--Enrollment table
--Colliding foreign key for enrollmentTeam_fk and enrollmentSec_fk
create table Enrollment(
	studentID int not null,
	depName varchar(25) not null,
	courseNum int not null,
	secNum int not null,
	teamName varchar(25) not null,
	constraint enrollmentSec_fk foreign key (depName, courseNum, secNum) references Sections (depName, courseNum, secNum),
	constraint enrollmentStudent_fk foreign key (studentID) references Students (studentID),
	constraint enrollmentTeam_fk foreign key (teamName, secNum, depName, courseNum) references Team (teamName, secNum, depName, courseNum),
	constraint enrollment_pk primary key (studentID, depName, courseNum, secNum)
);

--Dimension table
--dimension are questions that will be ask on the survey
create table Dimension (
	diName varchar(25) not null,
	secNum int not null,
	depName varchar(25) not null,
	courseNum int not null,
	constraint dimension_fk foreign key (depName, courseNum, secNum) references Sections (depName, courseNum, secNum),
	constraint dimension_pk primary key (diName, secNum, courseNum, depName)
);


--SuveryRating table
--Collision foreign keys between the target and the student doing the survey
create table SurveyRating (
	ratingTarget int not null,
	studentID int not null,
	secNum int not null,
	depName varchar(25) not null,
	courseNum int not null,
	diName varchar(25) not null,
	rating int not null,
	constraint surveyRatingDi_fk foreign key (diName, secNum, courseNum, depName) references Dimension (diName, secNum, courseNum, depName),
	constraint surveyRatingTarget_fk foreign key (ratingTarget, depName, courseNum, secNum) references Enrollment (studentID, depName, courseNum, secNum),
	constraint surveyRatingStu_fk foreign key (studentID, depName, courseNum, secNum) references Enrollment (studentID, depName, courseNum, secNum),
	constraint surveyRating_pk primary key (diName, ratingTarget, studentID, secNum, depName, courseNum)
);

ALTER TABLE Enrollment
ADD grade varchar(3);

ALTER TABLE Courses
ADD courseDes varchar(100);

ALTER TABLE Sections
ADD instructor varchar(100);

--Insert value into Departments
insert into departments (depname) values
('CECS'),
('Physics'),
('Business');

--Insert value into Courses
insert into Courses (coursenum, depname, coursename, courseunits, coursedes) values
(323, 'CECS', 'Database', 3, 'Database fundamentals using Derby database and mySQL'),
(328, 'CECS', 'Algorithm', 3, 'Basic of algorithms such as sorting, Dijktra, BFS, DFS and so on'),
(151, 'Physics', 'Newtonian Physics', 4, 'Speed, velocity, momentum, kinetic energy and more'),
(152, 'Physics', 'Electricity & Magnetism', 4, 'fundamentals of electric and magnetic field and circuits');

--Insert into Students
insert into Students (studentID, firstName, lastName, Email) values
(22, 'Teostra', 'Smith', 'Teostra@gmail.com'),
(23, 'Lunastra', 'Snow', 'Lunastra@gmail.com'),
(24, 'Fatalis', 'Dow', 'Fatalis@gmail.com'),
(25, 'Fatalis', 'Do', 'alis@gmail.com'),
(26, 'Fatalis', 'Dom', 'vganesh@optonline.net'),
(27, 'Gerard', 'Sandoval', 'storerm@mac.com'),
(28, 'Latoya', 'Rogers', 'dwheeler@msn.com'),
(29, 'Mabel', 'Duncan', 'mahbub@mac.com'),
(30, 'Woodrow', 'Price', 'jaesenj@msn.com'),
(31, 'Courtney', 'Johnston', 'froodian@yahoo.ca'),
(32, 'John', 'Banks', 'granboul@live.com'),
(33, 'Bob', 'Do', 'drjlaw@optonline.net'),
(34, 'Rob', 'Hope', 'keiji@outlook.com'),
(35, 'Tran', 'Tram', 'xtang@att.net'),
(36, 'Fat', 'Dom', 'jhardin@hotmail.com'),
(37, 'Geralt', 'Rivia', 'geraltR@gmail.com'),
(38, 'Katsura', 'Kotaro', 'katsura@gmail.com'),
(39, 'Kamado', 'Tanjiro', 'kamado@gmail.com'),
(40, 'Nova', 'Starcraft', 'nova@gmail.com'),
(41, 'Jim', 'Raynor', 'jimR@gmail.com'),
(42, 'Kerrigan', 'Starcraft', 'kerrigan@gmail.com'),
(43, 'Sanji', 'Vinsmoke', 'sanji@gmail.com'),
(44, 'Robin', 'Nico', 'robinN@gmail.com'),
(45, 'Zoro', 'Onepiece', 'ZoroO@gmail.com'),
(46, 'Nami', 'Onepiece', 'namiO@gmail.com'),
(47, 'Roger', 'Gold', 'goldR@gmail.com'),
(48, 'Luffy', 'Monkey', 'luffyM@gmail.com'),
(49, 'Edward', 'Newgate', 'edwardN@gmail.com'),
(50, 'Mihawk', 'Dracule', 'mihawkD@gmail.com');

--Insert into Sections
insert into Sections (coursenum, depname, secnum, instructor, starttime, endtime, meetingdays) values
(323, 'CECS', 8, 'Mimi Opkins', '17:30', '19:00', 'MW'),
(328, 'CECS', 2, 'Pouye Sedighian', '18:00', '20:00', 'TTh'),
(328, 'CECS', 3, 'Dave Goldstein', '13:00', '15:00', 'MW'),
(152, 'Physics', 7, 'Gintoki Sakata', '9:00', '11:00', 'MW'),
(152, 'Physics', 2, 'Thomas Gredig', '11:00', '13:00', 'TTh');

--Insert into Team
insert into Team (teamname, secnum, depname, coursenum) values
('JavaBeans', 8, 'CECS', 323),
('Dolphins', 8, 'CECS', 323),
('Shark', 2, 'CECS', 328),
('Swordfish', 3, 'CECS', 328),
('ShrodingerCat', 7, 'Physics', 152),
('SayWattNow', 2, 'Physics', 152),
('Elephant', 8, 'CECS', 323),
('Lion', 8, 'CECS', 323),
('Falcon', 8, 'CECS', 323),
('Whale', 8, 'CECS', 323),
('Cheetah', 8, 'CECS', 323);

--Insert into Enrollment
insert into Enrollment (studentID, depName, courseNum, secNum, grade, teamname) values
(23, 'CECS', 328, 2, 'A', 'Shark'),
(33, 'CECS',328, 2,'B', 'Shark'),

(25, 'Physics', 152,7, 'B', 'ShrodingerCat'),
(26, 'Physics', 152, 7,'A', 'ShrodingerCat'),
(27, 'Physics', 152, 7, 'C', 'ShrodingerCat'),
(28, 'Physics', 152, 7, 'B', 'ShrodingerCat'),

(22, 'CECS', 323, 8, 'A', 'Dolphins'),
(29,  'CECS',323, 8, 'B', 'Dolphins'),

(24, 'CECS', 323, 8, 'B', 'JavaBeans'),
(30, 'CECS',323,8,'B', 'JavaBeans'),
(31, 'CECS',323,8,'B', 'JavaBeans'),
(32, 'CECS',323, 8, 'B', 'JavaBeans'),
(33, 'CECS',323, 8,'D', 'JavaBeans'),
(34, 'CECS',323, 8,'A', 'JavaBeans'),


(25, 'CECS', 328,3, 'C', 'Swordfish'),
(26, 'CECS', 328, 3,'B', 'Swordfish'),
(27, 'CECS', 328, 3, 'A', 'Swordfish'),
(28, 'CECS', 328, 3, 'B', 'Swordfish'),

(30, 'Physics',152,2,'B', 'SayWattNow'),
(31, 'Physics',152,2,'C', 'SayWattNow'),
(32, 'Physics',152, 2, 'B', 'SayWattNow'),

--Team Lion
(37, 'CECS',323,8,'A', 'Lion'),
(38, 'CECS',323,8,'B', 'Lion'),
(39, 'CECS',323,8,'A', 'Lion'),
(41, 'CECS',323,8,'A', 'Lion'),
(42, 'CECS',323,8,'A', 'Lion'),

--Team Falcon
(40, 'CECS',323,8,'A', 'Falcon'),

--Team Elephant

--Team Whale
(43, 'CECS',323,8,'A', 'Whale'),
(44, 'CECS',323,8,'B', 'Whale'),
(45, 'CECS',323,8,'A', 'Whale'),
(46, 'CECS',323,8,'B', 'Whale'),
(47, 'CECS',323,8,'B', 'Whale'),
(48, 'CECS',323,8,'A', 'Whale'),
(49, 'CECS',323,8,'B', 'Whale'),
(50, 'CECS',323,8,'A', 'Whale');

--Insert into Dimension
insert into Dimension(diName,secNum,depName,courseNum) values
('Trustworthiness', 2, 'CECS',328),
('Contribution', 2, 'CECS',328),
('Meeting Punctuality', 2, 'CECS',328),

('Communication', 3, 'CECS',328),
('Efficiency', 3, 'CECS',328),
('Attention to Detail', 3, 'CECS',328),

('Trustworthiness', 8, 'CECS',323),
('Contribution', 8, 'CECS',323),
('Meeting Punctuality', 8, 'CECS',323),

('Trustworthiness', 7, 'Physics',152),
('Contribution', 7, 'Physics',152),
('Meeting Punctuality', 7, 'Physics',152),

('Communication', 2, 'Physics',152),
('Efficiency', 2, 'Physics',152),
('Attention to Detail', 2, 'Physics',152);

-- Insert into SurveyRating
insert into SurveyRating(ratingTarget, studentID, secNum, depName, courseNum, diName, rating) values
-- Team JavaBeans
--ID  24 being rated
(24, 24, 8 , 'CECS', 323, 'Trustworthiness', 5),
(24, 24, 8 , 'CECS', 323, 'Contribution', 5),
(24, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(24, 30, 8 , 'CECS', 323, 'Trustworthiness', 3),
(24, 30, 8 , 'CECS', 323, 'Contribution', 2),
(24, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(24, 31, 8 , 'CECS', 323, 'Trustworthiness', 2),
(24, 31, 8 , 'CECS', 323, 'Contribution', 5),
(24, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 3),


(24, 32, 8 , 'CECS', 323, 'Trustworthiness', 3),
(24, 32, 8 , 'CECS', 323, 'Contribution', 4),
(24, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(24, 33, 8 , 'CECS', 323, 'Trustworthiness', 2),
(24, 33, 8 , 'CECS', 323, 'Contribution', 3),
(24, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(24, 34, 8 , 'CECS', 323, 'Trustworthiness', 3),
(24, 34, 8 , 'CECS', 323, 'Contribution', 4),
(24, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

--30 being rated
(30, 30, 8 , 'CECS', 323, 'Trustworthiness', 5),
(30, 30, 8 , 'CECS', 323, 'Contribution', 5),
(30, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(30, 24, 8 , 'CECS', 323, 'Trustworthiness', 3),
(30, 24, 8 , 'CECS', 323, 'Contribution', 5),
(30, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 2),

(30, 31, 8 , 'CECS', 323, 'Trustworthiness', 4),
(30, 31, 8 , 'CECS', 323, 'Contribution', 2),
(30, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(30, 32, 8 , 'CECS', 323, 'Trustworthiness', 4),
(30, 32, 8 , 'CECS', 323, 'Contribution', 5),
(30, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 3),

(30, 33, 8 , 'CECS', 323, 'Trustworthiness', 5),
(30, 33, 8 , 'CECS', 323, 'Contribution', 1),
(30, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 2),

(30, 34, 8 , 'CECS', 323, 'Trustworthiness', 4),
(30, 34, 8 , 'CECS', 323, 'Contribution', 5),
(30, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 3),

--31 being rated
(31, 31, 8 , 'CECS', 323, 'Trustworthiness', 5),
(31, 31, 8 , 'CECS', 323, 'Contribution', 5),
(31, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(31, 30, 8 , 'CECS', 323, 'Trustworthiness', 3),
(31, 30, 8 , 'CECS', 323, 'Contribution', 1),
(31, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(31, 24, 8 , 'CECS', 323, 'Trustworthiness', 2),
(31, 24, 8 , 'CECS', 323, 'Contribution', 1),
(31, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

(31, 32, 8 , 'CECS', 323, 'Trustworthiness', 2),
(31, 32, 8 , 'CECS', 323, 'Contribution', 4),
(31, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(31, 33, 8 , 'CECS', 323, 'Trustworthiness', 1),
(31, 33, 8 , 'CECS', 323, 'Contribution', 3),
(31, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 2),

(31, 34, 8 , 'CECS', 323, 'Trustworthiness', 5),
(31, 34, 8 , 'CECS', 323, 'Contribution', 4),
(31, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 2),

--32 being rated
(32, 32, 8 , 'CECS', 323, 'Trustworthiness', 5),
(32, 32, 8 , 'CECS', 323, 'Contribution', 5),
(32, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(32, 30, 8 , 'CECS', 323, 'Trustworthiness', 3),
(32, 30, 8 , 'CECS', 323, 'Contribution', 5),
(32, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

(32, 31, 8 , 'CECS', 323, 'Trustworthiness', 2),
(32, 31, 8 , 'CECS', 323, 'Contribution', 1),
(32, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 3),

(32, 24, 8 , 'CECS', 323, 'Trustworthiness', 1),
(32, 24, 8 , 'CECS', 323, 'Contribution', 2),
(32, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

(32, 33, 8 , 'CECS', 323, 'Trustworthiness', 2),
(32, 33, 8 , 'CECS', 323, 'Contribution', 5),
(32, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(32, 34, 8 , 'CECS', 323, 'Trustworthiness', 4),
(32, 34, 8 , 'CECS', 323, 'Contribution', 5),
(32, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

--33 being rated
(33, 33, 8 , 'CECS', 323, 'Trustworthiness', 5),
(33, 33, 8 , 'CECS', 323, 'Contribution', 5),
(33, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(33, 30, 8 , 'CECS', 323, 'Trustworthiness', 2),
(33, 30, 8 , 'CECS', 323, 'Contribution', 5),
(33, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 3),

(33, 31, 8 , 'CECS', 323, 'Trustworthiness', 5),
(33, 31, 8 , 'CECS', 323, 'Contribution', 2),
(33, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(33, 24, 8 , 'CECS', 323, 'Trustworthiness', 3),
(33, 24, 8 , 'CECS', 323, 'Contribution', 4),
(33, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 1),

(33, 32, 8 , 'CECS', 323, 'Trustworthiness', 2),
(33, 32, 8 , 'CECS', 323, 'Contribution', 3),
(33, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(33, 34, 8 , 'CECS', 323, 'Trustworthiness', 2),
(33, 34, 8 , 'CECS', 323, 'Contribution', 2),
(33, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 3),

--34 being rated
(34, 34, 8 , 'CECS', 323, 'Trustworthiness', 5),
(34, 34, 8 , 'CECS', 323, 'Contribution', 5),
(34, 34, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(34, 30, 8 , 'CECS', 323, 'Trustworthiness', 5),
(34, 30, 8 , 'CECS', 323, 'Contribution', 4),
(34, 30, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(34, 31, 8 , 'CECS', 323, 'Trustworthiness', 3),
(34, 31, 8 , 'CECS', 323, 'Contribution', 3),
(34, 31, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

(34, 24, 8 , 'CECS', 323, 'Trustworthiness', 4),
(34, 24, 8 , 'CECS', 323, 'Contribution', 5),
(34, 24, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(34, 32, 8 , 'CECS', 323, 'Trustworthiness', 5),
(34, 32, 8 , 'CECS', 323, 'Contribution', 3),
(34, 32, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

(34, 33, 8 , 'CECS', 323, 'Trustworthiness', 2),
(34, 33, 8 , 'CECS', 323, 'Contribution', 5),
(34, 33, 8 , 'CECS', 323, 'Meeting Punctuality', 3),


-- Team Dolphin
--22 being rated
(22, 22, 8 , 'CECS', 323, 'Trustworthiness', 5),
(22, 22, 8 , 'CECS', 323, 'Contribution', 5),
(22, 22, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(22, 29, 8 , 'CECS', 323, 'Trustworthiness', 4),
(22, 29, 8 , 'CECS', 323, 'Contribution', 3),
(22, 29, 8 , 'CECS', 323, 'Meeting Punctuality', 4),

--29 being rated
(29, 29, 8 , 'CECS', 323, 'Trustworthiness', 5),
(29, 29, 8 , 'CECS', 323, 'Contribution', 5),
(29, 29, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

(29, 22, 8 , 'CECS', 323, 'Trustworthiness', 4),
(29, 22, 8 , 'CECS', 323, 'Contribution', 4),
(29, 22, 8 , 'CECS', 323, 'Meeting Punctuality', 5),

-- Team Shark
-- 23 being rated
(23, 23, 2 , 'CECS', 328, 'Trustworthiness', 4),
(23, 23, 2 , 'CECS', 328, 'Contribution', 3),
(23, 23, 2 , 'CECS', 328, 'Meeting Punctuality', 4),


(23, 33, 2 , 'CECS', 328, 'Trustworthiness', 4),
(23, 33, 2 , 'CECS', 328, 'Contribution', 3),
(23, 33, 2 , 'CECS', 328, 'Meeting Punctuality', 4),

-- 33 being rated
(33, 33, 2 , 'CECS', 328, 'Trustworthiness', 5),
(33, 33, 2 , 'CECS', 328, 'Contribution', 5),
(33, 33, 2 , 'CECS', 328, 'Meeting Punctuality', 5),


(33, 23, 2 , 'CECS', 328, 'Trustworthiness', 2),
(33, 23, 2 , 'CECS', 328, 'Contribution', 2),
(33, 23, 2 , 'CECS', 328, 'Meeting Punctuality', 3),


-- Team Swordfish
--25 being rated
(25, 25, 3 , 'CECS', 328, 'Communication', 4),
(25, 25, 3 , 'CECS', 328, 'Efficiency', 3),
(25, 25, 3 , 'CECS', 328, 'Attention to Detail', 4),


(25, 26, 3 , 'CECS', 328, 'Communication', 4),
(25, 26, 3 , 'CECS', 328, 'Efficiency', 5),
(25, 26, 3 , 'CECS', 328, 'Attention to Detail', 5),

(25, 27, 3 , 'CECS', 328, 'Communication', 3),
(25, 27, 3 , 'CECS', 328, 'Efficiency', 3),
(25, 27, 3 , 'CECS', 328, 'Attention to Detail', 3),

(25, 28, 3 , 'CECS', 328, 'Communication', 1),
(25, 28, 3 , 'CECS', 328, 'Efficiency', 3),
(25, 28, 3 , 'CECS', 328, 'Attention to Detail', 4),

--26 being rated
(26, 26, 3 , 'CECS', 328, 'Communication', 5),
(26, 26, 3 , 'CECS', 328, 'Efficiency', 3),
(26, 26, 3 , 'CECS', 328, 'Attention to Detail', 2),

(26, 25, 3 , 'CECS', 328, 'Communication', 5),
(26, 25, 3 , 'CECS', 328, 'Efficiency', 3),
(26, 25, 3 , 'CECS', 328, 'Attention to Detail', 2),

(26, 27, 3 , 'CECS', 328, 'Communication', 3),
(26, 27, 3 , 'CECS', 328, 'Efficiency', 3),
(26, 27, 3 , 'CECS', 328, 'Attention to Detail', 4),

(26, 28, 3 , 'CECS', 328, 'Communication', 2),
(26, 28, 3 , 'CECS', 328, 'Efficiency', 3),
(26, 28, 3 , 'CECS', 328, 'Attention to Detail', 4),


--27 being rated
(27, 27, 3 , 'CECS', 328, 'Communication', 5),
(27, 27, 3 , 'CECS', 328, 'Efficiency', 5),
(27, 27, 3 , 'CECS', 328, 'Attention to Detail', 5),

(27, 25, 3 , 'CECS', 328, 'Communication', 5),
(27, 25, 3 , 'CECS', 328, 'Efficiency', 3),
(27, 25, 3 , 'CECS', 328, 'Attention to Detail', 2),

(27, 26, 3 , 'CECS', 328, 'Communication', 3),
(27, 26, 3 , 'CECS', 328, 'Efficiency', 5),
(27, 26, 3 , 'CECS', 328, 'Attention to Detail', 3),

(27, 28, 3 , 'CECS', 328, 'Communication', 4),
(27, 28, 3 , 'CECS', 328, 'Efficiency', 3),
(27, 28, 3 , 'CECS', 328, 'Attention to Detail', 4),

--28 being rated
(28, 28, 3 , 'CECS', 328, 'Communication', 5),
(28, 28, 3 , 'CECS', 328, 'Efficiency', 5),
(28, 28, 3 , 'CECS', 328, 'Attention to Detail', 5),

(28, 25, 3 , 'CECS', 328, 'Communication', 1),
(28, 25, 3 , 'CECS', 328, 'Efficiency', 5),
(28, 25, 3 , 'CECS', 328, 'Attention to Detail', 5),

(28, 26, 3 , 'CECS', 328, 'Communication', 5),
(28, 26, 3 , 'CECS', 328, 'Efficiency', 2),
(28, 26, 3 , 'CECS', 328, 'Attention to Detail', 5),

(28, 27, 3 , 'CECS', 328, 'Communication', 2),
(28, 27, 3 , 'CECS', 328, 'Efficiency', 4),
(28, 27, 3 , 'CECS', 328, 'Attention to Detail', 3),

-- Team SayWattNow
-- 30 being rated
(30, 30, 2 , 'Physics', 152, 'Communication', 5),
(30, 30, 2, 'Physics', 152, 'Efficiency', 5),
(30, 30, 2 , 'Physics', 152, 'Attention to Detail', 5),

(30, 31, 2 , 'Physics', 152, 'Communication', 4),
(30, 31, 2, 'Physics', 152, 'Efficiency', 3),
(30, 31, 2 , 'Physics', 152, 'Attention to Detail', 4),
(30, 32, 2 , 'Physics', 152, 'Communication', 2),
(30, 32, 2, 'Physics', 152, 'Efficiency', 3),
(30, 32, 2 , 'Physics', 152, 'Attention to Detail', 3),

-- 31 being rated
(31, 31, 2 , 'Physics', 152, 'Communication', 5),
(31, 31, 2, 'Physics', 152, 'Efficiency', 5),
(31, 31, 2 , 'Physics', 152, 'Attention to Detail', 5),

(31, 30, 2 , 'Physics', 152, 'Communication', 4),
(31, 30, 2, 'Physics', 152, 'Efficiency', 4),
(31, 30, 2 , 'Physics', 152, 'Attention to Detail', 3),

(31, 32, 2 , 'Physics', 152, 'Communication', 3),
(31, 32, 2, 'Physics', 152, 'Efficiency', 4),
(31, 32, 2 , 'Physics', 152, 'Attention to Detail', 3),

-- 32 being rated
(32, 32, 2 , 'Physics', 152, 'Communication', 5),
(32, 32, 2, 'Physics', 152, 'Efficiency', 5),
(32, 32, 2 , 'Physics', 152, 'Attention to Detail', 5),

(32, 30, 2 , 'Physics', 152, 'Communication', 2),
(32, 30, 2, 'Physics', 152, 'Efficiency', 2),
(32, 30, 2 , 'Physics', 152, 'Attention to Detail', 1),

(32, 31, 2 , 'Physics', 152, 'Communication', 2),
(32, 31, 2, 'Physics', 152, 'Efficiency', 1),
(32, 31, 2 , 'Physics', 152, 'Attention to Detail', 1);


--Testing SQL for functions
-- Query 1: Listing all team members for each team
SELECT * FROM Enrollment order by depname, coursenum, secnum, teamname;

-- Query 2: For each student in each team, list the average of the scores that that student received from their peers.
SELECT Students.STUDENTID, Students.FIRSTNAME, Students.LASTNAME, Enrollment.TEAMNAME,
AVG(surveyRating.RATING) AS averageRating
FROM surveyRating
	INNER JOIN Students ON surveyRating.RATINGTARGET=Students.STUDENTID
    	INNER JOIN Enrollment ON Enrollment.STUDENTID=Students.STUDENTID
GROUP BY Students.STUDENTID, Students.FIRSTNAME, Students.LASTNAME, Enrollment.TEAMNAME;


-- Query 4: Report the average value that the student received from their peers for each rating dimension within a given course section.  
-- Order by department, course number, student last name, student first name, and dimension text.
SELECT Students.STUDENTID, Students.FIRSTNAME, Students.LASTNAME, Enrollment.TEAMNAME,DIMENSION.DINAME,DIMENSION.COURSENUM,DIMENSION.DEPNAME, AVG(surveyRating.RATING) AS averageRating FROM surveyRating
INNER JOIN Students ON surveyRating.RATINGTARGET=Students.STUDENTID
INNER JOIN Enrollment on Enrollment.STUDENTID=Students.STUDENTID
INNER JOIN Dimension on surveyRating.DINAME = Dimension.DINAME
GROUP BY Students.STUDENTID, Students.FIRSTNAME, Students.LASTNAME, Enrollment.TEAMNAME,DIMENSION.DINAME,DIMENSION.COURSENUM,DIMENSION.DEPNAME
ORDER BY DIMENSION.DEPNAME, DIMENSION.COURSENUM,Students.LASTNAME, Students.FIRSTNAME,DIMENSION.DINAME;

-- Query 5: For each team, list the department name, the course name, the course units, the section number, the team name
SELECT teamName as "Team Name", depName as "Department Name", courseName as "Course Name", courseUnits as "Course Units", secNum as "Section Name"
FROM team natural join courses;

-- Query 6: For each team, report the department name, the course number, the section number, the team name, and the number of students in the team.
select t.teamName as "Team Name", t.depName as "Department Name", t.courseNum as "Course Number", t.secNum as "Section Number", e.cnt as "Number of Students"
from Team t inner join (select teamName, count(teamName) as cnt from enrollment group by teamName) e on t.teamName = e.teamName
order by t.depName, t.courseNum, t.secNum, t.teamName;


-- Query 3: Produce a report that shows all the teams whose number of students is > 2
-- higher or lower than the average number of students in the teams within that particular section.

--Display all teams that have more than two or less than 2 members compare to the section average (Inclusive)
select distinct teamname, MemCount.secnum, MemCount.coursenum, MemCount.numMembers, AverageTable.MemAverage from (select teamname, secnum, coursenum, count(teamname) as numMembers from enrollment
group by teamname, secnum, coursenum) as MemCount
inner join 
(select coursenum, secnum, avg(numMembers) as MemAverage
from (select teamname, secnum, coursenum, count(teamname) as numMembers from enrollment
group by teamname, secnum, coursenum) as MemCount
group by coursenum, secnum) as AverageTable
on Memcount.courseNum = AverageTable.courseNum and Memcount.secnum = AverageTable.secnum
where Memcount.numMembers <= (AverageTable.MemAverage + 2)
and Memcount.numMembers >= (AverageTable.MemAverage - 2);